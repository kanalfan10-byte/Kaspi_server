from fastapi import FastAPI, Request, HTTPException
from fastapi.responses import HTMLResponse, JSONResponse
import requests

app = FastAPI()

# --- –¢–ï–õ–ï–ì–†–ê–ú –ù–ê–°–¢–†–û–ô–ö–ò ---
TELEGRAM_BOT_TOKEN = "8135133326:AAH1sRHovfzjRcyeDGqeCALoMF_qvwS4C6k"
TELEGRAM_CHAT_ID = "5070282357"

def send_telegram_message(text: str):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram —á–∞—Ç."""
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    data = {"chat_id": TELEGRAM_CHAT_ID, "text": text}
    try:
        requests.post(url, data=data, timeout=10)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", e)

def parse_amount(data: dict) -> int:
    """–ü—ã—Ç–∞–µ–º—Å—è –¥–æ—Å—Ç–∞—Ç—å —Å—É–º–º—É –∏–∑ JSON. –ò—â–µ–º –ø–æ–ª—è: amount, sum, value, total."""
    for key in ("amount", "sum", "value", "total"):
        if key in data:
            try:
                return int(float(data[key]))
            except Exception:
                pass
    return 0

@app.post("/payment")
async def payment_handler(request: Request):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –æ—Ç Kaspi –∏–ª–∏ —Ç–µ—Å—Ç–∞."""
    data = await request.json()
    print("–ü–æ–ª—É—á–µ–Ω–æ:", data)

    amount = parse_amount(data)
    if amount <= 0:
        send_telegram_message(f"‚ö†Ô∏è –ü–ª–∞—Ç—ë–∂ –±–µ–∑ —Å—É–º–º—ã: {data}")
        raise HTTPException(status_code=400, detail="No valid amount in JSON.")

    if amount % 100 != 0:
        send_telegram_message(f"‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—É–º–º–∞ {amount}‚Ç∏ (–Ω–µ –∫—Ä–∞—Ç–Ω–æ 100). –î–∞–Ω–Ω—ã–µ: {data}")
        raise HTTPException(status_code=400, detail="Amount must be multiple of 100.")

    games = amount // 100

    send_telegram_message(
        f"üí∏ –û–ø–ª–∞—Ç–∞ Kaspi!\n"
        f"–°—É–º–º–∞: {amount}‚Ç∏\n"
        f"–ò–≥—Ä—ã: {games}\n"
        f"–î–∞–Ω–Ω—ã–µ: {data}"
    )

    print(f"–ù–∞–¥–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å {games} –∏–≥—Ä.")

    return {"ok": True, "amount": amount, "games": games}

@app.get("/", response_class=HTMLResponse)
async def home():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞."""
    html = """
    <!DOCTYPE html>
    <html>
    <head>
        <title>Kaspi Server</title>
        <script>
            async function testPayment() {
                const response = await fetch("/payment", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ amount: 300, note: "–¢–µ—Å—Ç –æ—Ç –∫–Ω–æ–ø–∫–∏" })
                });
                const result = await response.json();
                alert("–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –û—Ç–≤–µ—Ç: " + JSON.stringify(result));
            }
        </script>
    </head>
    <body style="text-align:center; font-family:sans-serif; margin-top:80px;">
        <h1>‚úÖ Kaspi-—Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç</h1>
        <p>–ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏—ë–º—É –æ–ø–ª–∞—Ç —á–µ—Ä–µ–∑ Kaspi QR</p>
        <button onclick="testPayment()" style="margin-top:30px; padding:10px 20px; font-size:18px;">üß™ –¢–µ—Å—Ç –æ–ø–ª–∞—Ç—ã</button>
    </body>
    </html>
    """
    return HTMLResponse(content=html)
